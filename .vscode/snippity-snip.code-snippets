{
  // Place your rn-fun workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  //   "scope": "javascript,typescript",
  //   "prefix": "log",
  //   "body": [
  //     "console.log('$1');",
  //     "$2"
  //   ],
  //   "description": "Log output to console"
  // }
  "React Native Component": {
    "scope": "typescriptreact",
    "prefix": "react-component",
    "body": [
      "import './${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}.css';",
      "",
      "type Props = {};",
      "",
      "function ${1:${TM_FILENAME_BASE}}(props: Props) {",
      "  return (",
      "    <div className=\"container\">",
      "      <p className=\"text\">{`T O D O`}</p>",
      "    </div>",
      "  );",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};",
      "",
    ],
    "description": "Use this for the actual component file e.g. <ComponentName>/<ComponentName>.tsx"
  },
  "React Native Styles File": {
    "scope": "css",
    "prefix": "react-styles",
    "body": [
      ".container {",
      "  display: flex;",
      "  flex: 1;",
      "}",
      "",
      ".text {",
      "  font-size: calc(10px + 2vmin);",
      "}",
      "",
    ],
    "description": "Use this for the <ComponentName>/styles.css file"
  },
  "React Native Component Test": {
    "scope": "typescriptreact",
    "prefix": "react-component-test",
    "body": [
      "import {render} from '@testing-library/react';",
      "",
      "import ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/} from './';",
      "",
      "it('renders correctly', () => {",
      "  render(<${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/} />);",
      "});",
      "",
    ],
    "description": "Use this for the actual component file e.g. <ComponentName>/<ComponentName>.tsx"
  },
  "React Native Component Index": {
    "scope": "typescript",
    "prefix": "react-index",
    "body": [
      "export {default} from './${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}';",
      ""
    ],
    "description": "Use this for the <ComponentName>/index.js file, so the component can be imported like `import ComponentName from \"components/ComponentName\"`"
  }
}